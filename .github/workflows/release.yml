name: release
on:
  push:
    branch: default

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout textadept-build dependencies
        uses: actions/checkout@v3
        with:
          repository: orbitalquark/textadept-build
          path: textadept-build
      - name: Build
        shell: bash
        run: |
          mkdir -p build/_deps && mv textadept-build/* build/_deps && rm -r textadept-build
          cmake -S . -B build
          cmake --build build --config Release -j
          cmake --install build --config Release
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            lua/socket/*.so
            lua/socket/*.dll
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
      - name: Package
        shell: bash
        run: |
          cmake -S . -B build # fetch dependent Lua files
          git archive HEAD --prefix debugger/ | tar -xf -
          mv *.so *.dll debugger/lua/socket/
          mv build/_deps/dkjson-src/dkjson.lua debugger
          mv build/_deps/lua_socket-src/src/socket.lua debugger/lua
          mv build/_deps/mobdebug-src/src/mobdebug.lua debugger/lua
          zip -r debugger.zip debugger
      - name: Tag
        run: |
          git tag latest
          git push -f origin latest
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: latest
          tag: latest
          allowUpdates: true
          body: Latest automated build (ignore github-actions' release date)
          artifacts: debugger.zip
          token: ${{ secrets.GITHUB_TOKEN }}
  cleanup:
    runs-on: ubuntu-latest
    needs: [build, release]
    steps:
      - name: Remove older build artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '1 minute'
